-- Create payment_templates table
CREATE TABLE payment_templates (
    template_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    template_name VARCHAR2(100) NOT NULL,
    template_description VARCHAR2(255),
    last_updated DATE,
    last_updated_by VARCHAR2(50),
    mx_message XMLType,
    CONSTRAINT chk_template_name_length CHECK (LENGTH(template_name) <= 100)
);

-- Create mx_params table (formerly mx_templates)
CREATE TABLE mx_params (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    xpath VARCHAR2(100) NOT NULL,
    value VARCHAR2(255),
    last_updated DATE,
    last_updated_by VARCHAR2(50)
);

-- Create validation_params table (formerly payment_template_validation)
CREATE TABLE validation_params (
    id NUMBER,
    field VARCHAR2(100) NOT NULL,
    value VARCHAR2(255),
);

-- Create Indexes for foreign keys
CREATE INDEX idx_payment_template_mx ON mx_templates (template_id);
CREATE INDEX idx_payment_template_mt ON mt_templates (template_id);
CREATE INDEX idx_payment_template_validation ON payment_template_validation (template_id);

CREATE OR REPLACE PROCEDURE add_payment_template (
    p_template_name        IN payment_templates.template_name%TYPE,
    p_template_description IN payment_templates.template_description%TYPE,
    p_mx_message           IN XMLType
) AS
BEGIN
    INSERT INTO payment_templates (
        template_name,
        template_description,
        last_updated,
        last_updated_by,
        mx_message
    ) VALUES (
        p_template_name,
        p_template_description,
        SYSDATE,
        USER,  -- Automatically captures the username of the person executing the procedure
        p_mx_message
    );
END add_payment_template;
/
DECLARE
    v_template_name        payment_templates.template_name%TYPE := 'Sample Template';
    v_template_description payment_templates.template_description%TYPE := 'This is a sample payment template.';
    v_mx_message           XMLType := XMLType('<YourXMLContentHere>');
BEGIN
    add_payment_template(
        p_template_name        => v_template_name,
        p_template_description => v_template_description,
        p_mx_message           => v_mx_message
    );
END;
/
