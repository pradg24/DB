-- Create the procedure to add mx_params
CREATE OR REPLACE PROCEDURE add_mx_params (
    p_xpaths IN SYS.ODCIVARCHAR2LIST,
    p_values IN SYS.ODCIVARCHAR2LIST
) AS
    -- Ensure the input collections have the same size
    l_count INTEGER := p_xpaths.COUNT;
    l_errors EXCEPTION;
    PRAGMA EXCEPTION_INIT(l_errors, -24381); -- Bulk errors
BEGIN
    IF l_count != p_values.COUNT THEN
        RAISE_APPLICATION_ERROR(-20001, 'Input collections must have the same number of elements.');
    END IF;

    -- Parameter validation
    IF l_count = 0 THEN
        RAISE_APPLICATION_ERROR(-20002, 'Input collections cannot be empty.');
    END IF;

    FOR i IN 1 .. l_count LOOP
        IF p_xpaths(i) IS NULL OR p_xpaths(i) = '' THEN
            RAISE_APPLICATION_ERROR(-20003, 'XPath cannot be null or empty.');
        END IF;
        IF p_values(i) IS NULL THEN
            RAISE_APPLICATION_ERROR(-20004, 'Value cannot be null.');
        END IF;
    END LOOP;

    -- Bulk insert using FORALL
    BEGIN
        FORALL i IN 1..l_count SAVE EXCEPTIONS
            INSERT INTO mx_params (
                xpath,
                value,
                last_updated,
                last_updated_by
            ) VALUES (
                p_xpaths(i),
                p_values(i),
                SYSDATE,
                USER
            );
    EXCEPTION
        WHEN l_errors THEN
            FOR i IN 1 .. SQL%BULK_EXCEPTIONS.COUNT LOOP
                DBMS_OUTPUT.PUT_LINE('Error on record ' || SQL%BULK_EXCEPTIONS(i).ERROR_INDEX || 
                                     ': ' || SQLERRM(SQL%BULK_EXCEPTIONS(i).ERROR_CODE));
            END LOOP;
            RAISE_APPLICATION_ERROR(-20005, 'Bulk insert failed. Check log for details.');
        WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20006, 'Error adding mx_params: ' || SQLERRM);
    END;

    -- Logging
    DBMS_OUTPUT.PUT_LINE('Successfully inserted ' || l_count || ' mx_params.');
END add_mx_params;
/

DECLARE
    -- Define collections to hold the data
    TYPE t_xpaths IS TABLE OF VARCHAR2(100);
    TYPE t_values IS TABLE OF VARCHAR2(255);

    v_xpaths t_xpaths := t_xpaths(
        '/Document/Payment/Amount',
        '/Document/Payment/Date'
    );

    v_values t_values := t_values(
        '1000.00',
        '2025-01-26'
    );
BEGIN
    -- Call the procedure to insert the parameters
    add_mx_params(
        p_xpaths => v_xpaths,
        p_values => v_values
    );
END;
/
