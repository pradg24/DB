CREATE TABLE payment_data (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    payment_reference VARCHAR2(100) NOT NULL,
    precondition_id NUMBER,
    payment_details XMLType,
    execution_id NUMBER,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_payment_preconditions_precondition FOREIGN KEY (precondition_id) REFERENCES preconditions(precondition_id) ON DELETE CASCADE
);

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class InsertDataExample {
    public static void main(String[] args) {
        // Database URL, username, and password
        String url = "jdbc:oracle:thin:@localhost:1521:xe";
        String username = "your_username"; // Replace with your actual username
        String password = "your_password"; // Replace with your actual password

        // SQL statement to insert data
        String insertSQL = "INSERT INTO payment_data (payment_reference, precondition_id, payment_details, execution_id, updated_at) "
                         + "VALUES (?, ?, XMLType(?), ?, CURRENT_TIMESTAMP)";

        Connection connection = null;
        PreparedStatement preparedStatement = null;

        try {
            // Load the JDBC driver
            Class.forName("oracle.jdbc.driver.OracleDriver");

            // Establish the connection
            connection = DriverManager.getConnection(url, username, password);

            // Create a PreparedStatement object
            preparedStatement = connection.prepareStatement(insertSQL);

            // Set the parameter values
            preparedStatement.setString(1, "REF123"); // Replace with actual payment reference
            preparedStatement.setInt(2, 1); // Replace with actual precondition_id
            preparedStatement.setString(3, "<PaymentDetails><Amount>100.00</Amount></PaymentDetails>"); // Replace with actual XML content
            preparedStatement.setInt(4, 1001); // Replace with actual execution_id

            // Execute the SQL statement
            preparedStatement.executeUpdate();

            System.out.println("Data inserted into 'payment_data' table successfully!");

        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
        } finally {
            // Close the resources
            try {
                if (preparedStatement != null) preparedStatement.close();
                if (connection != null) connection.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
}
