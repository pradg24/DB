CREATE OR REPLACE PROCEDURE insert_precondition (
    p_suite_id IN NUMBER,
    p_description IN CLOB,
    p_test_steps IN step_table
) IS
    v_precondition_id NUMBER;
    v_step_id NUMBER;
    v_action_id NUMBER;
BEGIN
    -- Parameter validation
    IF p_description IS NULL THEN
        RAISE_APPLICATION_ERROR(-20002, 'Description cannot be null');
    END IF;

    -- Insert into preconditions
    INSERT INTO preconditions (
        suite_id,
        description,
        created_at,
        updated_at,
        updated_by
    ) VALUES (
        p_suite_id,
        p_description,
        SYSTIMESTAMP,
        SYSTIMESTAMP,
        USER
    ) RETURNING precondition_id INTO v_precondition_id;

    -- Insert test steps
    FOR i IN 1 .. p_test_steps.COUNT LOOP
        -- Get action_id
        v_action_id := get_action_id(p_test_steps(i).action);

        -- Insert into test_steps
        INSERT INTO test_steps (
            test_case_id,
            action,
            type,
            execution_order,
            locator,
            created_at,
            updated_at,
            updated_by
        ) VALUES (
            v_precondition_id,
            p_test_steps(i).action,
            p_test_steps(i).type,
            p_test_steps(i).execution_order,
            p_test_steps(i).locator,
            SYSTIMESTAMP,
            SYSTIMESTAMP,
            USER
        ) RETURNING step_id INTO v_step_id;

        -- Insert action arguments for each test step
        FOR j IN 1 .. p_test_steps(i).action_arguments.COUNT LOOP
            INSERT INTO action_arguments (
                action_id,
                step_id,
                argument_name,
                argument_value
            ) VALUES (
                v_action_id,
                v_step_id,
                p_test_steps(i).action_arguments(j).argument_name,
                p_test_steps(i).action_arguments(j).argument_value
            );
        END LOOP;
    END LOOP;
EXCEPTION 
    WHEN NO_DATA_FOUND THEN
        RAISE_APPLICATION_ERROR(-20005, 
            'Suite not found: ' || p_suite_id);
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20004, 
            'Error adding precondition or test steps: ' || 
            SQLERRM || ' at ' || DBMS_UTILITY.FORMAT_CALL_STACK);
END;

DECLARE
    v_test_steps step_table := step_table(
        step_obj(
            'Action1',
            'Type1',
            1,
            'Locator1',
            action_argument_table(
                action_argument_obj('arg1', 'value1'),
                action_argument_obj('arg2', 'value2')
            )
        )
    );
BEGIN
    insert_precondition(
        p_suite_id => 1,
        p_test_case_id => NULL,  -- Optional, can be omitted
        p_description => 'Precondition description',
        p_test_steps => v_test_steps
    );
END;

SELECT object_name, status
FROM user_objects
WHERE object_name = 'INSERT_PRECONDITION' AND object_type = 'PROCEDURE';

